{"version":3,"sources":["mainContext.js","socketContext.js","usersContext.js","components/Login/Login.js","components/Chat/Chat.js","components/DefaultPage.js","App.js","index.js"],"names":["MainContext","React","createContext","MainProvider","children","useState","name","setName","room","setRoom","Provider","value","SocketContext","SocketProvider","socket","io","transports","UsersContext","UsersProvider","users","setUsers","Login","useContext","history","useHistory","toast","useToast","useEffect","on","className","flexDirection","mb","as","size","textAlign","fontFamily","fontWeight","letterSpacing","gap","base","md","variant","mr","type","placeholder","onChange","e","target","colorScheme","isRound","icon","onClick","emit","error","console","log","position","title","description","status","duration","isClosable","push","Chat","message","setMessage","messages","setMessages","window","onpopstate","logout","msg","notif","go","width","sm","height","bg","p","borderRadius","alignItems","justifyContent","IconButton","color","map","user","minH","fontSize","id","flex","slice","toUpperCase","opacity","h","w","debug","length","i","m","ml","text","mt","disabled","DefaultPage","App","align","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ef73387.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst MainContext = React.createContext()\n\nconst MainProvider = ({ children }) => {\n    const [name, setName] = useState('')\n    const [room, setRoom] = useState('')\n\n    return (\n        <MainContext.Provider value={{ name, room, setName, setRoom }}>\n            {children}\n        </MainContext.Provider>\n    )\n}\n\nexport { MainContext, MainProvider } ","import React from 'react'\nimport io from 'socket.io-client'\n\nconst SocketContext = React.createContext()\n\nconst SocketProvider = ({ children }) => {\n    const ENDPOINT = 'https://socket-chat-ak.herokuapp.com/';\n    const socket = io(ENDPOINT, { transports: ['websocket', 'polling'] })\n    return (\n        <SocketContext.Provider value={socket}>\n            {children}\n        </SocketContext.Provider>\n    )\n}\n\nexport { SocketContext, SocketProvider }","import React, { useState } from 'react'\n\nconst UsersContext = React.createContext()\n\nconst UsersProvider = ({ children }) => {\n    const [users, setUsers] = useState([])\n\n    return (\n        <UsersContext.Provider value={{ users, setUsers }}>\n            {children}\n        </UsersContext.Provider>\n    )\n}\n\nexport { UsersContext, UsersProvider } ","import React, { useContext, useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { MainContext } from '../../mainContext'\nimport { SocketContext } from '../../socketContext'\nimport { Flex, Heading, IconButton, Input } from \"@chakra-ui/react\"\nimport { RiArrowRightLine } from \"react-icons/ri\"\nimport { useToast } from \"@chakra-ui/react\"\nimport { UsersContext } from '../../usersContext'\n\nconst Login = () => {\n    const socket = useContext(SocketContext)\n    const { name, setName, room, setRoom } = useContext(MainContext)\n    const history = useHistory()\n    const toast = useToast()\n    const { setUsers } = useContext(UsersContext)\n\n    //Checks to see if there's a user already present\n\n    useEffect(() => {\n        socket.on(\"users\", users => {\n            setUsers(users)\n        })\n    })\n\n    //Emits the login event and if successful redirects to chat and saves user data\n    const handleClick = () => {\n        socket.emit('login', { name, room }, error => {\n            if (error) {\n                console.log(error)\n                return toast({\n                    position: \"top\",\n                    title: \"Error\",\n                    description: error,\n                    status: \"error\",\n                    duration: 5000,\n                    isClosable: true,\n                })\n            }\n            history.push('/chat')\n            return toast({\n                position: \"top\",\n                title: \"Hey there\",\n                description: `Welcome to ${room}`,\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            })\n        })\n    }\n\n    return (\n        <Flex className='login' flexDirection='column' mb='8'>\n            <Heading as=\"h1\" size=\"4xl\" textAlign='center' mb='8' fontFamily='DM Sans' fontWeight='600' letterSpacing='-2px'>Rhatcom</Heading>\n            <Flex className=\"form\" gap='1rem' flexDirection={{ base: \"column\", md: \"row\" }}>\n                <Input variant='filled' mr={{ base: \"0\", md: \"4\" }} mb={{ base: \"4\", md: \"0\" }} type=\"text\" placeholder='User Name' value={name} onChange={e => setName(e.target.value)} />\n                <Input variant='filled' mr={{ base: \"0\", md: \"4\" }} mb={{ base: \"4\", md: \"0\" }} type=\"text\" placeholder='Room Name' value={room} onChange={e => setRoom(e.target.value)} />\n                <IconButton colorScheme='blue' isRound='true' icon={<RiArrowRightLine />} onClick={handleClick}></IconButton>\n            </Flex>\n        </Flex>\n    )\n}\n\nexport default Login\n","import React, { useContext, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { MainContext } from '../../mainContext'\nimport { SocketContext } from '../../socketContext'\nimport { Box, Flex, Heading, IconButton, Text, Menu, Button, MenuButton, MenuList, MenuItem } from \"@chakra-ui/react\"\nimport { FiList } from 'react-icons/fi'\nimport { BiMessageDetail } from 'react-icons/bi'\nimport { RiSendPlaneFill } from 'react-icons/ri'\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { useToast } from \"@chakra-ui/react\"\nimport './Chat.scss'\nimport { UsersContext } from '../../usersContext'\n\nconst Chat = () => {\n    const { name, room, setName, setRoom } = useContext(MainContext)\n    const socket = useContext(SocketContext)\n    const [message, setMessage] = useState('')\n    const [messages, setMessages] = useState([])\n    const { users } = useContext(UsersContext)\n    const history = useHistory()\n    const toast = useToast()\n\n    window.onpopstate = e => logout()\n    //Checks to see if there's a user present\n    useEffect(() => { if (!name) return history.push('/') }, [history, name])\n\n\n    useEffect(() => {\n        socket.on(\"message\", msg => {\n            setMessages(messages => [...messages, msg]);\n        })\n\n        socket.on(\"notification\", notif => {\n            toast({\n                position: \"top\",\n                title: notif?.title,\n                description: notif?.description,\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            })\n        })\n    }, [socket, toast])\n\n\n    const handleSendMessage = () => {\n        socket.emit('sendMessage', message, () => setMessage(''))\n        setMessage('')\n    }\n\n    const logout = () => {\n        setName(''); setRoom('');\n        history.push('/')\n        history.go(0)\n    }\n\n    return (\n        <Flex className='room' flexDirection='column' width={{ base: \"100%\", sm: '575px' }} height={{ base: \"100%\", sm: \"auto\" }}>\n            <Heading className='heading' as='h4' bg='white' p='1rem 1.5rem' borderRadius='10px 10px 0 0'>\n                <Flex alignItems='center' justifyContent='space-between'>\n                    <Menu >\n                        <MenuButton as={IconButton} icon={<FiList />} isRound='true' bg='blue.300' color='white' />\n                        <MenuList>\n                            {\n                                users && users.map(user => {\n                                    return (\n                                        <MenuItem minH='40px' key={user.id}>\n                                            <Text fontSize='sm'>{user.name}</Text>\n                                        </MenuItem>\n                                    )\n                                })\n                            }\n                        </MenuList>\n                    </Menu>\n                    <Flex alignItems='center' flexDirection='column' flex={{ base: \"1\", sm: \"auto\" }}>\n                        <Heading fontSize='lg'> {room.slice(0, 1).toUpperCase() + room.slice(1)}</Heading>\n                        <Flex alignItems='center'><Text mr='1' fontWeight='400' fontSize='md' opacity='.7' letterSpacing='0' >{name}</Text><Box h={2} w={2} borderRadius='100px' bg='green.300'></Box></Flex>\n                    </Flex>\n                    <Button color='gray.500' fontSize='sm' onClick={logout}  >Logout</Button>\n                </Flex>\n            </Heading>\n\n\n            <ScrollToBottom className='messages' debug={false}>\n                {messages.length > 0 ?\n                    messages.map((msg, i) =>\n                    (<Box key={i} className={`message ${msg.user === name ? \"my-message\" : \"\"}`} m=\".2rem 0\">\n                        <Text fontSize='xs' opacity='.7' ml='5px' className='user'>{msg.user}</Text>\n                        <Text fontSize='sm' className='msg' p=\".4rem .8rem\" bg='white' borderRadius='15px' color='white'>{msg.text}</Text>\n                    </Box>)\n                    )\n                    :\n                    <Flex alignItems='center' justifyContent='center' mt='.5rem' bg='#EAEAEA' opacity='.2' w='100%'>\n                        <Box mr='2'>-----</Box>\n                        <BiMessageDetail fontSize='1rem' />\n                        <Text ml='1' fontWeight='400'>No messages</Text>\n                        <Box ml='2'>-----</Box>\n                    </Flex>\n                }\n            </ScrollToBottom>\n            <div className='form'>\n                <input type=\"text\" placeholder='Enter Message' value={message} onChange={e => setMessage(e.target.value)} />\n                <IconButton colorScheme='green' isRound='true' icon={<RiSendPlaneFill />} onClick={handleSendMessage} disabled={message === '' ? true : false}>Send</IconButton>\n            </div>\n        </Flex>\n\n    )\n}\n\nexport default Chat\n","import { IconButton } from '@chakra-ui/react'\nimport React from 'react'\nimport { BiArrowBack } from 'react-icons/bi'\nimport { Redirect, useHistory } from 'react-router-dom'\nexport default function DefaultPage() {\n    const history = useHistory()\n    const redirect = () => history.push('/')\n    return (\n        <div>\n            <IconButton mr={2} isRound='true' bg='green.300' color='white' icon={<BiArrowBack />} onClick={redirect} /> You're lost. Go home.\n        </div>\n    )\n}\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Login from './components/Login/Login'\nimport Chat from './components/Chat/Chat'\nimport { SocketProvider } from './socketContext'\nimport { MainProvider } from './mainContext'\nimport './App.css'\nimport { ChakraProvider, Flex } from \"@chakra-ui/react\"\nimport { UsersProvider } from './usersContext'\nimport DefaultPage from './components/DefaultPage'\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <MainProvider>\n        <UsersProvider>\n          <SocketProvider>\n            <Flex className=\"App\" align='center' justifyContent='center'>\n              <Router>\n                <Switch>\n                  <Route exact path='/' component={Login} />\n                  <Route path='/chat' component={Chat} />\n                  <Route component={DefaultPage} />\n                </Switch>\n              </Router>\n            </Flex>\n          </SocketProvider>\n        </UsersProvider>\n      </MainProvider>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}